Class FirestoneWindow {
    hwid := unset
    process_path := unset
    last_start := A_Now

    __New(hwid) {
        this.hwid := hwid
        this.process_path := WinGetProcessPath(hwid)
        this.BorderlessAndResize()
    }

    Close() {
        ; –ï—Å–ª–∏ –æ–∫–Ω–∞ –Ω–µ—Ç, —Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
        if !WinExist(this.hwid)
            return true

        WinClose(this.hwid)
        if WinWaitClose(this.hwid,, 120000)
            return true
        else
            return false
    }

    Open(run_string) {
        Run(run_string)
        if WinWait('ahk_exe ' this.process_path,, 300000)
        {
            this.hwid := Integer(WinGetID('ahk_exe ' this.process_path))
            Sleep(30000) ; 30 —Å–µ–∫—É–Ω–¥ –Ω–∞ –∑–∞–ø—É—Å–∫?
            this.BorderlessAndResize()
            this.last_start := A_Now
            return true
        }
        else
        {
            return false
        }
    }

    BorderlessAndResize() {
        SetWinDelay(500)

        i := 0
        loop 5
        {
            i += 1
            
            this.Restore()

            if this.SetBorderless() && this.SetSize()
                break
            
            if i >= 5
            {
                MsgBox("–ù–µ –º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å –æ–∫–Ω—É –Ω—É–∂–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∏–ª–∏ —É–±—Ä–∞—Ç—å —Ä–∞–º–∫—É! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏–≥—Ä–∞ –≤ –æ–∫–æ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ!")
                Exit
            }

            Sleep 500
        }
    }

    Exist() {
        return WinExist(this.hwid)
    }

    Activate() {
        If WinExist(this.hwid) {
            WinActivate
            Sleep(500)

            if !WinActive(this.hwid) ; –ï—Å—Ç—å —É –º–µ–Ω—è –Ω–µ–ø–æ–Ω—è—Ç–Ω—ã–π –±–æ–≥, —á—Ç–æ –æ–∫–Ω–æ –Ω–µ –≤–µ—Å–≥–¥–∞ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è ü§î
            {
                WinMinimize(this.hwid)
                Sleep(1000)
                WinRestore(this.hwid)
                WinActivate
            }
        }
            
        else
        {
            DebugLog.Log('–û–∫–Ω–æ —Å –∏–≥—Ä–æ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!')
            throw '–û–∫–Ω–æ —Å –∏–≥—Ä–æ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!'
        }
    }

    IsActive() {
        if !WinExist(this.hwid)
        {
            DebugLog.Log('–û–∫–Ω–æ —Å –∏–≥—Ä–æ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!')
            throw '–û–∫–Ω–æ —Å –∏–≥—Ä–æ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!'
        }
    
        if !WinActive(this.hwid)
        {
            DebugLog.Log('–û–∫–Ω–æ –ø–µ—Ä–µ—Å—Ç–∞–ª–æ –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º!')
            throw '–û–∫–Ω–æ –ø–µ—Ä–µ—Å—Ç–∞–ª–æ –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º!'
        }
    }

    Restore() {
        minmax := WinGetMinMax(this.hwid)
        if minmax != 0
            WinRestore(this.hwid)
    
    }

    SetBorderless() {
        if (WinGetStyle(this.hwid) != 336265216)
            WinSetStyle(-0xC40000, this.hwid)
        else
            return true

        return false
    }

    SetSize() {
        WinGetPos(&x, &y, &w, &h, this.hwid)
        if (x != 0 || y != 0 || w != 1920 || h != 1018)
            WinMove(0, 0, 1920, 1018, this.hwid)
        else
            return true

        return false
    }
}